var _elm_community$random_extra$Random_List$get = F2(
	function (index, list) {
		return _elm_lang$core$List$head(
			A2(_elm_lang$core$List$drop, index, list));
	});
var _elm_community$random_extra$Random_List$choose = function (list) {
	if (_elm_lang$core$List$isEmpty(list)) {
		return _elm_community$random_extra$Random_Extra$constant(
			{ctor: '_Tuple2', _0: _elm_lang$core$Maybe$Nothing, _1: list});
	} else {
		var back = function (i) {
			return A2(_elm_lang$core$List$drop, i + 1, list);
		};
		var front = function (i) {
			return A2(_elm_lang$core$List$take, i, list);
		};
		var lastIndex = _elm_lang$core$List$length(list) - 1;
		var gen = A2(_elm_lang$core$Random$int, 0, lastIndex);
		return A2(
			_elm_lang$core$Random$map,
			function (index) {
				return {
					ctor: '_Tuple2',
					_0: A2(_elm_community$random_extra$Random_List$get, index, list),
					_1: A2(
						_elm_lang$core$List$append,
						front(index),
						back(index))
				};
			},
			gen);
	}
};
var _elm_community$random_extra$Random_List$shuffle = function (list) {
	if (_elm_lang$core$List$isEmpty(list)) {
		return _elm_community$random_extra$Random_Extra$constant(list);
	} else {
		var helper = function (_p0) {
			var _p1 = _p0;
			var _p6 = _p1._0;
			return A2(
				_elm_lang$core$Random$andThen,
				function (_p2) {
					var _p3 = _p2;
					var _p5 = _p3._1;
					var _p4 = _p3._0;
					if (_p4.ctor === 'Nothing') {
						return _elm_community$random_extra$Random_Extra$constant(
							{ctor: '_Tuple2', _0: _p6, _1: _p5});
					} else {
						return helper(
							{
								ctor: '_Tuple2',
								_0: {ctor: '::', _0: _p4._0, _1: _p6},
								_1: _p5
							});
					}
				},
				_elm_community$random_extra$Random_List$choose(_p1._1));
		};
		return A2(
			_elm_lang$core$Random$map,
			_elm_lang$core$Tuple$first,
			helper(
				{
					ctor: '_Tuple2',
					_0: {ctor: '[]'},
					_1: list
				}));
	}
};
