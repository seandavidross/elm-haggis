var _user$project$Haggis_Card$points = function (card) {
	var _p0 = card;
	if (_p0.ctor === 'NaturalCard') {
		return _p0._1;
	} else {
		return _p0._1;
	}
};
var _user$project$Haggis_Card$isNatural = function (card) {
	var _p1 = card;
	if (_p1.ctor === 'NaturalCard') {
		return true;
	} else {
		return false;
	}
};
var _user$project$Haggis_Card$Blue = {ctor: 'Blue'};
var _user$project$Haggis_Card$Green = {ctor: 'Green'};
var _user$project$Haggis_Card$Yellow = {ctor: 'Yellow'};
var _user$project$Haggis_Card$Orange = {ctor: 'Orange'};
var _user$project$Haggis_Card$Red = {ctor: 'Red'};
var _user$project$Haggis_Card$Black = {ctor: 'Black'};
var _user$project$Haggis_Card$Wild = function (a) {
	return {ctor: 'Wild', _0: a};
};
var _user$project$Haggis_Card$Natural = function (a) {
	return {ctor: 'Natural', _0: a};
};
var _user$project$Haggis_Card$suit = function (card) {
	var _p2 = card;
	if (_p2.ctor === 'NaturalCard') {
		return _user$project$Haggis_Card$Natural(_p2._0._1);
	} else {
		switch (_p2._0._1.ctor) {
			case 'AsNaturalPip':
				return _user$project$Haggis_Card$Natural(_p2._0._1._0._1);
			case 'AsUnnaturalCourt':
				return _user$project$Haggis_Card$Natural(_p2._0._1._0._1);
			default:
				return _user$project$Haggis_Card$Wild(_p2._0._1._0._1);
		}
	}
};
var _user$project$Haggis_Card$suits = {
	ctor: '::',
	_0: _user$project$Haggis_Card$Natural(_user$project$Haggis_Card$Red),
	_1: {
		ctor: '::',
		_0: _user$project$Haggis_Card$Natural(_user$project$Haggis_Card$Orange),
		_1: {
			ctor: '::',
			_0: _user$project$Haggis_Card$Natural(_user$project$Haggis_Card$Yellow),
			_1: {
				ctor: '::',
				_0: _user$project$Haggis_Card$Natural(_user$project$Haggis_Card$Green),
				_1: {
					ctor: '::',
					_0: _user$project$Haggis_Card$Natural(_user$project$Haggis_Card$Blue),
					_1: {
						ctor: '::',
						_0: _user$project$Haggis_Card$Wild(_user$project$Haggis_Card$Black),
						_1: {ctor: '[]'}
					}
				}
			}
		}
	}
};
var _user$project$Haggis_Card$Ten = {ctor: 'Ten'};
var _user$project$Haggis_Card$Eight = {ctor: 'Eight'};
var _user$project$Haggis_Card$Six = {ctor: 'Six'};
var _user$project$Haggis_Card$Four = {ctor: 'Four'};
var _user$project$Haggis_Card$Two = {ctor: 'Two'};
var _user$project$Haggis_Card$Nine = {ctor: 'Nine'};
var _user$project$Haggis_Card$Seven = {ctor: 'Seven'};
var _user$project$Haggis_Card$Five = {ctor: 'Five'};
var _user$project$Haggis_Card$Three = {ctor: 'Three'};
var _user$project$Haggis_Card$Odd = function (a) {
	return {ctor: 'Odd', _0: a};
};
var _user$project$Haggis_Card$Even = function (a) {
	return {ctor: 'Even', _0: a};
};
var _user$project$Haggis_Card$King = {ctor: 'King'};
var _user$project$Haggis_Card$Queen = {ctor: 'Queen'};
var _user$project$Haggis_Card$Jack = {ctor: 'Jack'};
var _user$project$Haggis_Card$Court = function (a) {
	return {ctor: 'Court', _0: a};
};
var _user$project$Haggis_Card$Pip = function (a) {
	return {ctor: 'Pip', _0: a};
};
var _user$project$Haggis_Card$rank = function (card) {
	var _p3 = card;
	if (_p3.ctor === 'NaturalCard') {
		return _user$project$Haggis_Card$Pip(_p3._0._0);
	} else {
		switch (_p3._0._1.ctor) {
			case 'AsNaturalPip':
				return _user$project$Haggis_Card$Pip(_p3._0._1._0._0);
			case 'AsNaturalCourt':
				return _user$project$Haggis_Card$Court(_p3._0._1._0._0);
			default:
				return _user$project$Haggis_Card$Court(_p3._0._1._0._0);
		}
	}
};
var _user$project$Haggis_Card$equal = F2(
	function (card, card_) {
		return _elm_lang$core$Native_Utils.eq(
			_user$project$Haggis_Card$rank(card),
			_user$project$Haggis_Card$rank(card_));
	});
var _user$project$Haggis_Card$ranks = _elm_lang$core$Array$fromList(
	{
		ctor: '::',
		_0: _user$project$Haggis_Card$Pip(
			_user$project$Haggis_Card$Even(_user$project$Haggis_Card$Two)),
		_1: {
			ctor: '::',
			_0: _user$project$Haggis_Card$Pip(
				_user$project$Haggis_Card$Odd(_user$project$Haggis_Card$Three)),
			_1: {
				ctor: '::',
				_0: _user$project$Haggis_Card$Pip(
					_user$project$Haggis_Card$Even(_user$project$Haggis_Card$Four)),
				_1: {
					ctor: '::',
					_0: _user$project$Haggis_Card$Pip(
						_user$project$Haggis_Card$Odd(_user$project$Haggis_Card$Five)),
					_1: {
						ctor: '::',
						_0: _user$project$Haggis_Card$Pip(
							_user$project$Haggis_Card$Even(_user$project$Haggis_Card$Six)),
						_1: {
							ctor: '::',
							_0: _user$project$Haggis_Card$Pip(
								_user$project$Haggis_Card$Odd(_user$project$Haggis_Card$Seven)),
							_1: {
								ctor: '::',
								_0: _user$project$Haggis_Card$Pip(
									_user$project$Haggis_Card$Even(_user$project$Haggis_Card$Eight)),
								_1: {
									ctor: '::',
									_0: _user$project$Haggis_Card$Pip(
										_user$project$Haggis_Card$Odd(_user$project$Haggis_Card$Nine)),
									_1: {
										ctor: '::',
										_0: _user$project$Haggis_Card$Pip(
											_user$project$Haggis_Card$Even(_user$project$Haggis_Card$Ten)),
										_1: {
											ctor: '::',
											_0: _user$project$Haggis_Card$Court(_user$project$Haggis_Card$Jack),
											_1: {
												ctor: '::',
												_0: _user$project$Haggis_Card$Court(_user$project$Haggis_Card$Queen),
												_1: {
													ctor: '::',
													_0: _user$project$Haggis_Card$Court(_user$project$Haggis_Card$King),
													_1: {ctor: '[]'}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	});
var _user$project$Haggis_Card$rankOrdering = _matthewsj$elm_ordering$Ordering$explicit(
	_elm_lang$core$Array$toList(_user$project$Haggis_Card$ranks));
var _user$project$Haggis_Card$byRank = F2(
	function (r1, r2) {
		return A2(_user$project$Haggis_Card$rankOrdering, r1, r2);
	});
var _user$project$Haggis_Card$cardOrdering = A2(
	_matthewsj$elm_ordering$Ordering$byRank,
	function (card) {
		return 1;
	},
	F2(
		function (c1, c2) {
			return A2(
				_user$project$Haggis_Card$rankOrdering,
				_user$project$Haggis_Card$rank(c1),
				_user$project$Haggis_Card$rank(c2));
		}));
var _user$project$Haggis_Card$CourtCardIndex = function (a) {
	return {ctor: 'CourtCardIndex', _0: a};
};
var _user$project$Haggis_Card$court = _user$project$Haggis_Card$CourtCardIndex;
var _user$project$Haggis_Card$PipCardIndex = function (a) {
	return {ctor: 'PipCardIndex', _0: a};
};
var _user$project$Haggis_Card$pip = _user$project$Haggis_Card$PipCardIndex;
var _user$project$Haggis_Card$AsUnnaturalCourt = function (a) {
	return {ctor: 'AsUnnaturalCourt', _0: a};
};
var _user$project$Haggis_Card$AsNaturalCourt = function (a) {
	return {ctor: 'AsNaturalCourt', _0: a};
};
var _user$project$Haggis_Card$AsNaturalPip = function (a) {
	return {ctor: 'AsNaturalPip', _0: a};
};
var _user$project$Haggis_Card$Points = function (a) {
	return {ctor: 'Points', _0: a};
};
var _user$project$Haggis_Card$CourtCard = F2(
	function (a, b) {
		return {ctor: 'CourtCard', _0: a, _1: b};
	});
var _user$project$Haggis_Card$NaturalCard = F2(
	function (a, b) {
		return {ctor: 'NaturalCard', _0: a, _1: b};
	});
var _user$project$Haggis_Card$create = function (cardIndex) {
	var _p4 = cardIndex;
	if (_p4.ctor === 'PipCardIndex') {
		var _p6 = _p4._0;
		var _p5 = _p6;
		if (_p5._0.ctor === 'Even') {
			return A2(
				_user$project$Haggis_Card$NaturalCard,
				_p6,
				_user$project$Haggis_Card$Points(0));
		} else {
			return A2(
				_user$project$Haggis_Card$NaturalCard,
				_p6,
				_user$project$Haggis_Card$Points(1));
		}
	} else {
		var _p8 = _p4._0;
		var _p7 = _p8;
		switch (_p7._0.ctor) {
			case 'Jack':
				return A2(
					_user$project$Haggis_Card$CourtCard,
					{
						ctor: '_Tuple2',
						_0: _p8,
						_1: _user$project$Haggis_Card$AsNaturalCourt(_p8)
					},
					_user$project$Haggis_Card$Points(2));
			case 'Queen':
				return A2(
					_user$project$Haggis_Card$CourtCard,
					{
						ctor: '_Tuple2',
						_0: _p8,
						_1: _user$project$Haggis_Card$AsNaturalCourt(_p8)
					},
					_user$project$Haggis_Card$Points(3));
			default:
				return A2(
					_user$project$Haggis_Card$CourtCard,
					{
						ctor: '_Tuple2',
						_0: _p8,
						_1: _user$project$Haggis_Card$AsNaturalCourt(_p8)
					},
					_user$project$Haggis_Card$Points(5));
		}
	}
};
